{
  "compilerOptions": {
    "lib": ["dom", "deno.ns"]
  },
  "permissions": {
    "build-dictionary": {
      "env": ["NO_COLOR", "DEBUG_TAGS", "DEBUG_CHUNKS"],
      "read": ["./dictionary/dictionary"],
      "write": ["./dictionary/dictionary.ts"]
    },
    "soft-build-dictionary": {
      "env": ["NO_COLOR", "DEBUG_TAGS", "DEBUG_CHUNKS"],
      "read": ["./dictionary/dictionary", "./dictionary/dictionary.ts"],
      "write": ["./dictionary/dictionary.ts"]
    }
  },
  "tasks": {
    "build": {
      "description": "Builds every static files needed for GitHub pages. This builds the dictionary first at `./dictionary/dictionary.ts` then the distribution code `./dist/main.js`.",
      "command": "deno bundle --output=./dist/main.js --minify --sourcemap=linked --platform=browser --format=iife ./src/main.ts",
      "dependencies": ["build-dictionary"]
    },
    "start": {
      "description": "Starts a development server which automatically rebuilds the project whenever there are changes to the code. However, there is no server that serves frontend and you have to manually refresh the page.",
      "command": "(trap 'kill 0' SIGINT; deno run --permission-set=build-dictionary --no-prompt --frozen --cached-only --watch --no-clear-screen ./dictionary/watch.ts & deno bundle --output=./dist/main.js --sourcemap=linked --platform=browser --format=iife --watch ./src/main.ts)",
      "dependencies": ["soft-build-dictionary"]
    },
    "repl": {
      "description": "Starts a REPL",
      "command": "deno run --no-prompt --frozen --cached-only ./src/repl.ts",
      "dependencies": ["build-dictionary"]
    },
    "build-dictionary": {
      "description": "Builds the dictionary at `./dictionary/dictionary.ts`",
      "command": "deno run --permission-set=build-dictionary --no-prompt --frozen --cached-only ./dictionary/build.ts"
    },
    "soft-build-dictionary": {
      "description": "Only builds the dictionary at `./dictionary/dictionary.ts` when it doesn't exists. When an error occurs, an empty dictionary is provided.",
      "command": "deno run --permission-set=soft-build-dictionary --no-prompt --frozen --cached-only ./dictionary/soft-build.ts"
    }
  },
  "fmt": {
    "exclude": [
      "./dictionary/dictionary.ts",
      "./dist/main.js"
    ]
  },
  "lint": {
    "exclude": [
      "./dictionary/dictionary.ts",
      "./dist/main.js"
    ],
    "rules": {
      "tags": ["recommended"],
      "include": [
        "camelcase",
        "explicit-module-boundary-types",
        "no-console",
        "no-boolean-literal-for-arguments",
        "no-eval",
        "no-inferrable-types",
        "no-non-null-asserted-optional-chain",
        "no-self-compare",
        "no-sparse-arrays",
        "no-sync-fn-in-async-fn",
        "no-useless-rename",
        "prefer-ascii",
        "single-var-declarator"
      ],
      "exclude": ["no-explicit-any"]
    }
  },
  "imports": {
    "@std/assert": "jsr:@std/assert@^1.0.14",
    "@std/async": "jsr:@std/async@^1.0.14",
    "@std/cache": "jsr:@std/cache@^0.2.0",
    "@std/collections": "jsr:@std/collections@^1.1.3",
    "@std/fs": "jsr:@std/fs@^1.0.19",
    "@std/html": "jsr:@std/html@^1.0.4",
    "@std/random": "jsr:@std/random@^0.1.2",
    "@std/regexp": "jsr:@std/regexp@^1.0.1",
    "@std/text": "jsr:@std/text@^1.0.16",
    "browser-dtector": "npm:browser-dtector@^4.1.0",
    "compromise": "npm:compromise@^14.14.4"
  }
}
